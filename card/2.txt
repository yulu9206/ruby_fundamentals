class Deck

  def initialize()
    @suits = ["diamond", "club", "heart", "spade"]
    @values = ['ace','2','3','4','5','6','7','8','9','10','jack','queen','king']
    @deck = []
    build_deck()
  end

  def shuffle
    @deck.shuffle!
  end

  def deal
    @deck.pop
  end

  def build_deck()
    puts @suits
    for i in 0...@suits.length
      for j in 0...@values.length
        newCard = Card.new(@values[j], @suits[i])
        @deck.push(newCard)
      end
    end
  end

  def display
    @deck.each {|a| a.display}
  end

  def reset
    build_deck()
  end
end

class Player
  def initialize(name)
    # var player = {}
    @name = name
    @hand = []
  end

  def draw(deck)
    # player.takeCard = function(deck)
      @hand.push(deck.deal())
      # return self
  end

  def discard(cardIdx)
    @hand.delete_at(cardIdx)
  end

  def display
    @hand.each { |a| a.display }
  end
end

class Card
  @value
  @suite

  def initialize(value,suite)
    @value = value
    @suite = suite
  end

  def display
    puts "#{@value} #{@suite}"
  end

end

myDeck = Deck.new
# myDeck.display
myDeck.shuffle
# myDeck.display
puts "====================================="
# myDeck.deal.display
puts "====================================="
myDeck.display
puts "RESET DECK"
# myDeck.reset
# myDeck.display
puts "Player DRAWs Card."
player1 = Player.new("Kevin")
player1.draw(myDeck)
player1.draw(myDeck)
player1.display
player1.discard(1)
puts "Discarded card"
player1.display
